version: "3.8"

services:
  # LocalStack for AWS service emulation
  localstack:
    image: localstack/localstack:latest
    container_name: blockchain-core-localstack
    ports:
      - "4566:4566"
    environment:
      - SERVICES=sqs,s3,dynamodb,sns,lambda,cloudwatch,events
      - DEBUG=1
      - DATA_DIR=/tmp/localstack/data
      - DOCKER_HOST=unix:///var/run/docker.sock
    volumes:
      - "${TMPDIR:-/tmp}/localstack:/tmp/localstack"
      - "/var/run/docker.sock:/var/run/docker.sock"
    networks:
      - blockchain-core-network

  # Producer service for local testing
  producer:
    build:
      context: .
      dockerfile: Dockerfile.producer
    container_name: blockchain-core-producer
    environment:
      - AWS_ENDPOINT_URL=http://localstack:4566
      - AWS_ACCESS_KEY_ID=test
      - AWS_SECRET_ACCESS_KEY=test
      - AWS_DEFAULT_REGION=us-east-1
      - SQS_QUEUE_URL=http://localstack:4566/000000000000/blockchain-core-trade-data
      - TRADING_SYMBOL=BTCUSDT
    depends_on:
      - localstack
    networks:
      - blockchain-core-network
    restart: unless-stopped

  # Jupyter notebook for data analysis
  jupyter:
    build:
      context: .
      dockerfile: Dockerfile.jupyter
    container_name: blockchain-core-jupyter
    ports:
      - "8888:8888"
    environment:
      - AWS_ENDPOINT_URL=http://localstack:4566
      - AWS_ACCESS_KEY_ID=test
      - AWS_SECRET_ACCESS_KEY=test
      - AWS_DEFAULT_REGION=us-east-1
    volumes:
      - ./notebooks:/home/jovyan/work
      - ./data:/home/jovyan/data
    depends_on:
      - localstack
    networks:
      - blockchain-core-network

  # Monitoring dashboard (Grafana)
  grafana:
    image: grafana/grafana:latest
    container_name: blockchain-core-grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana-storage:/var/lib/grafana
      - ./monitoring/grafana/dashboards:/etc/grafana/provisioning/dashboards
      - ./monitoring/grafana/datasources:/etc/grafana/provisioning/datasources
    networks:
      - blockchain-core-network

  # Prometheus for metrics collection
  prometheus:
    image: prom/prometheus:latest
    container_name: blockchain-core-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus-storage:/prometheus
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
      - "--storage.tsdb.path=/prometheus"
      - "--web.console.libraries=/etc/prometheus/console_libraries"
      - "--web.console.templates=/etc/prometheus/consoles"
      - "--storage.tsdb.retention.time=200h"
      - "--web.enable-lifecycle"
    networks:
      - blockchain-core-network

networks:
  blockchain-core-network:
    driver: bridge

volumes:
  grafana-storage:
  prometheus-storage:
